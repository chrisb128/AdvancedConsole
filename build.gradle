/*
* This file was generated by the Gradle 'init' task.
*
* This is a general purpose Gradle build.
* Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
*/
subprojects {
    version = '1.0'
}

dependencies {
}


task deleteOutputFolders(type: Delete) {
  delete "build"
}

task clean(type: Delete, dependsOn: deleteOutputFolders) {
}

def saveDockerImage(imageName, outputFile) {
  exec {
    commandLine("docker", "save", imageName)

    File outFile = new File(rootProject.projectDir, outputFile);
    mkdir outFile.getParent()
    outFile.createNewFile();

    standardOutput = new FileOutputStream(outFile, true)
  }
}

task assembleServer(type: Exec) {
  dependsOn("clean")
  dependsOn("server:build")

  saveDockerImage("advanced-console_api", "build/api.zip")
}

task assembleWebClient(type: Exec) {
  dependsOn("clean")
  dependsOn("client:build")

  saveDockerImage("advanced-console_client", "build/client.zip")
}

task assembleStorage(type: Exec) {
  dependsOn("clean")

  saveDockerImage("advanced-console_storage", "build/storage.zip")
}

task build {
  dependsOn assembleStorage
  dependsOn assembleServer
  dependsOn assembleWebClient
}
